<?xml version="1.0" encoding="UTF-8"?>
<!--Defining project type and providing rules and schema for validating-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--Specifying POM (Project Object Model) version as 4.0.0, standard-->
    <modelVersion>4.0.0</modelVersion>

    <!--Giving ownership identifiers -->
        <!-- groupID = Individual/s /Company-->
        <!-- artifactID = unique project name-->
        <!-- version = self-explanatory, in this case SNAPSHOT = in development; not commercially released (Java lingo :d)-->
    <groupId>com.HShrigma</groupId>
    <artifactId>jank-db</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- Properties - defining constants for compiler and build: -->
    <!--compiler.source/target - source/target Java version-->         
    <!--sourceEncoding - self-explanatory, UTF-8 is standard-->
    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <!-- Build plugins: What actually defines build rules-->
    <build>
        <!--Lists each plugin-->
        <plugins>
            <!-- Create executable JAR -->
            <plugin>
                <!--  this plugin follows similar rules to how the project plugin itself is configured --> 
                <!--i.e. group/artifact ID is same, finds plugin by identifiers-->
                <!--In this case, it gets the JAR plugin, to create executable JAR files-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <!--gets version for plugin-->
                <version>3.3.0</version> 
                <!-- plugin-specific config â€” each plugin defines its own options here -->
                <configuration>
                    <archive>
                        <manifest>
                            <!--Uses the class in project to execute from-->
                            <mainClass>jankdb.JankDB</mainClass> 
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>